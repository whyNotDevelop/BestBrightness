@page "/login"
@using BestBrightness.Data
@inject AuthenticationService AuthService
@inject NavigationManager Navigation

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin" class="d-flex justify-content-center align-items-center vh-100">
    <div class="card p-4 shadow-lg" style="width: 400px; border-radius: 10px;">
        <div class="card-body">
            <h3 class="card-title text-center" style="font-family: 'Arial Black', Gadget, sans-serif; color: #007bff;">Login</h3>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="id" class="form-label" style="font-weight: bold;">ID:</label>
                <InputNumber id="id" @bind-Value="loginModel.Id" class="form-control" style="border-radius: 5px; box-shadow: 0px 0px 5px rgba(0,0,0,0.1);" />
            </div>
            <div class="mb-3">
                <label for="password" class="form-label" style="font-weight: bold;">Password:</label>
                <InputText id="password" type="password" @bind-Value="loginModel.Password" class="form-control" style="border-radius: 5px; box-shadow: 0px 0px 5px rgba(0,0,0,0.1);" />
            </div>
            <button type="submit" class="btn btn-primary w-100" style="border-radius: 5px; font-weight: bold;">Login</button>
        </div>
    </div>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var admin = await AuthService.AuthenticateAdmin(loginModel.Id, loginModel.Password);
        if (admin != null)
        {
            // Redirect to Admin Dashboard
            Navigation.NavigateTo("/admin-dashboard");
            return;
        }

        var employee = await AuthService.AuthenticateEmployee(loginModel.Id, loginModel.Password);
        if (employee != null)
        {
            // Redirect based on role
            if (employee.Role == "Salesperson")
            {
                Navigation.NavigateTo("/sales-dashboard");
            }
            else if (employee.Role == "Warehouse Manager")
            {
                Navigation.NavigateTo("/warehouse-dashboard");
            }
            else if (employee.Role == "Store Manager/Admin")
            {
                Navigation.NavigateTo("/admin-dashboard");
            }
        }
        else
        {
            // Show error message
            loginModel.ErrorMessage = "Invalid ID or Password.";
        }
    }

    private class LoginModel
    {
        public int Id { get; set; }
        public string Password { get; set; }
        public string ErrorMessage { get; set; }
    }
}
